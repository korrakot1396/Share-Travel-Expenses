{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeImagePicker = _interopRequireDefault(require(\"react-native-image-picker\"));\n\nvar _reactNativeImageResizer = _interopRequireDefault(require(\"react-native-image-resizer\"));\n\nvar _reactNativeFs = _interopRequireDefault(require(\"react-native-fs\"));\n\nvar _jsxFileName = \"C:\\\\ShareTravelExpenses\\\\node_modules\\\\react-native-photo-upload\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PhotoUpload = function (_React$Component) {\n  (0, _inherits2.default)(PhotoUpload, _React$Component);\n\n  var _super = _createSuper(PhotoUpload);\n\n  function PhotoUpload() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PhotoUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      maxHeight: _this.props.height || 600,\n      maxWidth: _this.props.width || 600,\n      format: _this.props.format || 'JPEG',\n      quality: _this.props.quality || 100,\n      buttonDisabled: false\n    };\n    _this.options = _objectSpread({\n      title: _this.props.photoPickerTitle || 'Select Photo',\n      storageOptions: {\n        skipBackup: true,\n        path: 'images'\n      }\n    }, _this.props.imagePickerProps);\n\n    _this.openImagePicker = function () {\n      _this.setState({\n        buttonDisabled: true\n      });\n\n      if (_this.props.onStart) _this.props.onStart();\n\n      _reactNativeImagePicker.default.showImagePicker(_this.options, function _callee(response) {\n        var rotation, originalRotation, _this$state, maxHeight, maxWidth, quality, format, resizedImageUri, filePath, photoData, source;\n\n        return _regenerator.default.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  buttonDisabled: false\n                });\n\n                rotation = 0;\n                originalRotation = response.originalRotation;\n                if (_this.props.onResponse) _this.props.onResponse(response);\n\n                if (!response.didCancel) {\n                  _context.next = 10;\n                  break;\n                }\n\n                console.log('User cancelled image picker');\n                if (_this.props.onCancel) _this.props.onCancel('User cancelled image picker');\n                return _context.abrupt(\"return\");\n\n              case 10:\n                if (!response.error) {\n                  _context.next = 16;\n                  break;\n                }\n\n                console.log('ImagePicker Error: ', response.error);\n                if (_this.props.onError) _this.props.onError(response.error);\n                return _context.abrupt(\"return\");\n\n              case 16:\n                if (!response.customButton) {\n                  _context.next = 20;\n                  break;\n                }\n\n                console.log('User tapped custom button: ', response.customButton);\n                if (_this.props.onTapCustomButton) _this.props.onTapCustomButton(response.customButton);\n                return _context.abrupt(\"return\");\n\n              case 20:\n                _this$state = _this.state, maxHeight = _this$state.maxHeight, maxWidth = _this$state.maxWidth, quality = _this$state.quality, format = _this$state.format;\n\n                if (originalRotation === 90) {\n                  rotation = 90;\n                } else if (originalRotation === 180) {\n                  rotation = -180;\n                } else if (originalRotation === 270) {\n                  rotation = -90;\n                }\n\n                _context.next = 24;\n                return _regenerator.default.awrap(_reactNativeImageResizer.default.createResizedImage(\"data:image/jpeg;base64,\" + response.data, maxHeight, maxWidth, format, quality, rotation));\n\n              case 24:\n                resizedImageUri = _context.sent;\n                if (_this.props.onResizedImageUri) _this.props.onResizedImageUri(resizedImageUri);\n                filePath = _reactNative.Platform.OS === 'android' && resizedImageUri.uri.replace ? resizedImageUri.uri.replace('file:/data', '/data') : resizedImageUri.uri;\n                _context.next = 29;\n                return _regenerator.default.awrap(_reactNativeFs.default.readFile(filePath, 'base64'));\n\n              case 29:\n                photoData = _context.sent;\n                source = {\n                  uri: resizedImageUri.uri\n                };\n\n                _this.setState({\n                  avatarSource: source\n                });\n\n                if (_this.props.onPhotoSelect) _this.props.onPhotoSelect(photoData);\n\n              case 33:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    };\n\n    _this.renderChildren = function (props) {\n      return _react.default.Children.map(props.children, function (child) {\n        if (child && child.type === _reactNative.Image && _this.state.avatarSource) {\n          return _react.default.cloneElement(child, {\n            source: _this.state.avatarSource\n          });\n        } else return child;\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(PhotoUpload, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.onAfterRender) this.props.onAfterRender(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.container, this.props.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this.openImagePicker,\n        disabled: this.state.buttonDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, this.renderChildren(this.props)));\n    }\n  }]);\n  return PhotoUpload;\n}(_react.default.Component);\n\nexports.default = PhotoUpload;\nPhotoUpload.propTypes = {\n  containerStyle: _propTypes.default.object,\n  photoPickerTitle: _propTypes.default.string,\n  maxHeight: _propTypes.default.number,\n  maxWidth: _propTypes.default.number,\n  format: _propTypes.default.string,\n  quality: _propTypes.default.number,\n  onPhotoSelect: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onTapCustomButton: _propTypes.default.func,\n  onStart: _propTypes.default.func,\n  onCancel: _propTypes.default.func,\n  onResponse: _propTypes.default.func,\n  onRender: _propTypes.default.func,\n  onResizedImageUri: _propTypes.default.func,\n  imagePickerProps: _propTypes.default.object\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/ShareTravelExpenses/node_modules/react-native-photo-upload/index.js"],"names":["PhotoUpload","state","maxHeight","props","height","maxWidth","width","format","quality","buttonDisabled","options","title","photoPickerTitle","storageOptions","skipBackup","path","imagePickerProps","openImagePicker","setState","onStart","ImagePicker","showImagePicker","response","rotation","originalRotation","onResponse","didCancel","console","log","onCancel","error","onError","customButton","onTapCustomButton","ImageResizer","createResizedImage","data","resizedImageUri","onResizedImageUri","filePath","Platform","OS","uri","replace","RNFS","readFile","photoData","source","avatarSource","onPhotoSelect","renderChildren","React","Children","map","children","child","type","Image","cloneElement","onAfterRender","styles","container","containerStyle","Component","propTypes","PropTypes","object","string","number","func","onRender","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  View,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  Platform\n} from 'react-native'\nimport ImagePicker from 'react-native-image-picker'\nimport ImageResizer from 'react-native-image-resizer'\nimport RNFS from 'react-native-fs'\n\nexport default class PhotoUpload extends React.Component {\n  static propTypes = {\n    containerStyle: PropTypes.object,\n    photoPickerTitle: PropTypes.string,\n    maxHeight: PropTypes.number,\n    maxWidth: PropTypes.number,\n    format: PropTypes.string,\n    quality: PropTypes.number,\n    onPhotoSelect: PropTypes.func, // returns the base64 string of uploaded photo\n    onError: PropTypes.func, // if any error occur with response\n    onTapCustomButton: PropTypes.func, // on tap custom button\n    onStart: PropTypes.func, // when user starts (useful for loading, etc)\n    onCancel: PropTypes.func, // when user cancel\n    onResponse: PropTypes.func, // on response exists!\n    onRender: PropTypes.func, // after render\n    onResizedImageUri: PropTypes.func, // when image resized is ready\n    imagePickerProps: PropTypes.object // react-native-image-picker props\n  }\n\n  state = {\n    maxHeight: this.props.height || 600,\n    maxWidth: this.props.width || 600,\n    format: this.props.format || 'JPEG',\n    quality: this.props.quality || 100,\n    buttonDisabled: false\n  }\n\n  options = {\n    title: this.props.photoPickerTitle || 'Select Photo',\n    storageOptions: {\n      skipBackup: true,\n      path: 'images'\n    },\n    ...this.props.imagePickerProps\n  }\n\n  openImagePicker = () => {\n    this.setState({buttonDisabled: true})\n    if (this.props.onStart) this.props.onStart()\n\n    // get image from image picker\n    ImagePicker.showImagePicker(this.options, async response => {\n      this.setState({buttonDisabled: false})\n\n      let rotation = 0 \n      const {originalRotation} = response\n      \n\n      if (this.props.onResponse) this.props.onResponse(response)\n\n      if (response.didCancel) {\n        console.log('User cancelled image picker')\n        if (this.props.onCancel) this.props.onCancel('User cancelled image picker')\n        return\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error)\n        if (this.props.onError) this.props.onError(response.error)\n        return\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton)\n        if (this.props.onTapCustomButton) this.props.onTapCustomButton(response.customButton)\n        return\n      }\n\n      let { maxHeight, maxWidth, quality, format } = this.state\n      \n      //Determining rotation param\n      if ( originalRotation === 90) { \n        rotation = 90 \n      } else if (originalRotation === 180) { \n        //For a few images rotation is 180. \n        rotation = -180 \n      } else if ( originalRotation === 270 )  {\n        //When taking images with the front camera (selfie), the rotation is 270.\n        rotation = -90 \n      }\n      // resize image\n      const resizedImageUri = await ImageResizer.createResizedImage(\n        `data:image/jpeg;base64,${response.data}`,\n        maxHeight,\n        maxWidth,\n        format,\n        quality,\n        rotation\n      )\n\n      if (this.props.onResizedImageUri) this.props.onResizedImageUri(resizedImageUri)\n\n      const filePath = Platform.OS === 'android' && resizedImageUri.uri.replace\n        ? resizedImageUri.uri.replace('file:/data', '/data')\n        : resizedImageUri.uri\n\n      // convert image back to base64 string\n      const photoData = await RNFS.readFile(filePath, 'base64')\n      let source = { uri: resizedImageUri.uri }\n      this.setState({\n        avatarSource: source\n      })\n\n      // handle photo in props functions as data string\n      if (this.props.onPhotoSelect) this.props.onPhotoSelect(photoData)\n    })\n  }\n\n  renderChildren = props => {\n    return React.Children.map(props.children, child => {\n      if (child && child.type === Image && this.state.avatarSource) {\n        return React.cloneElement(child, {\n          source: this.state.avatarSource\n        })\n      } else return child\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.props.onAfterRender) this.props.onAfterRender(this.state)\n  }\n\n  render() {\n    return (\n      <View style={[styles.container, this.props.containerStyle]}>\n        <TouchableOpacity\n          onPress={this.openImagePicker}\n          disabled={this.state.buttonDisabled}\n        >\n          {this.renderChildren(this.props)}\n        </TouchableOpacity>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n})\n"]},"metadata":{},"sourceType":"script"}